{"version":3,"file":"app.js","mappings":"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","sources":["webpack://hpm-system/webpack/bootstrap","webpack://hpm-system/webpack/runtime/make namespace object","webpack://hpm-system/./wwwroot/js/site.js","webpack://hpm-system/./wwwroot/js/getDataFromUserService.js","webpack://hpm-system/./wwwroot/css/variables.css","webpack://hpm-system/./wwwroot/css/main.css","webpack://hpm-system/./wwwroot/css/grid.css","webpack://hpm-system/./wwwroot/css/card.css","webpack://hpm-system/./wwwroot/css/btn.css"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","class AuthManager {\r\n    constructor() {\r\n        this.tokenKey = 'hpm_auth_token';\r\n        this.userDataKey = 'hpm_user_data';\r\n        this.authApiUrl = '/api/auth';\r\n        this.isAuthenticated = false;\r\n        this.userData = null;\r\n\r\n        // Автоматически инициализируем при загрузке\r\n        this.initialize();\r\n    }\r\n\r\n    /**\r\n     * Инициализация менеджера аутентификации\r\n     */\r\n    async initialize() {\r\n        // Проверяем наличие кода аутентификации в URL\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        const authCode = urlParams.get('auth');\r\n\r\n        if (authCode) {\r\n            console.log('Найден код аутентификации в URL');\r\n            await this.exchangeAuthCode(authCode);\r\n\r\n            // Удаляем код из URL после обработки\r\n            this.clearAuthCodeFromUrl();\r\n        } else {\r\n            // Проверяем сохраненный токен\r\n            await this.checkStoredToken();\r\n        }\r\n\r\n        // Обновляем UI в зависимости от состояния авторизации\r\n        this.updateUI();\r\n    }\r\n\r\n    /**\r\n     * Обменивает код аутентификации на токен\r\n     */\r\n    async exchangeAuthCode(authCode) {\r\n        try {\r\n            const response = await fetch(`${this.authApiUrl}/exchange-code`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ authCode: authCode })\r\n            });\r\n\r\n            const result = await response.json();\r\n\r\n            if (response.ok && result.isAuthenticated) {\r\n                this.setAuthData(result.token, {\r\n                    userId: result.userId,\r\n                    email: result.email,\r\n                    phoneNumber: result.phoneNumber\r\n                });\r\n\r\n                console.log('✅ Авторизация успешна');\r\n                this.showNotification('Добро пожаловать!', 'success');\r\n            } else {\r\n                console.warn('❌ Ошибка при обмене кода аутентификации:', result.message);\r\n                this.clearAuthData();\r\n                this.showNotification(result.message || 'Ошибка авторизации', 'error');\r\n            }\r\n        } catch (error) {\r\n            console.error('❌ Ошибка при обмене кода аутентификации:', error);\r\n            this.clearAuthData();\r\n            this.showNotification('Произошла ошибка при авторизации', 'error');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Проверяет сохраненный токен\r\n     */\r\n    async checkStoredToken() {\r\n        const token = localStorage.getItem(this.tokenKey);\r\n\r\n        if (!token) {\r\n            this.clearAuthData();\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`${this.authApiUrl}/validate-token`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ token: token })\r\n            });\r\n\r\n            const result = await response.json();\r\n\r\n            if (response.ok && result.isAuthenticated) {\r\n                this.setAuthData(token, {\r\n                    userId: result.userId,\r\n                    email: result.email,\r\n                    phoneNumber: result.phoneNumber\r\n                });\r\n                console.log('✅ Токен валиден, пользователь авторизован');\r\n            } else {\r\n                console.log('❌ Токен невалиден, очищаем данные');\r\n                this.clearAuthData();\r\n            }\r\n        } catch (error) {\r\n            console.error('❌ Ошибка при проверке токена:', error);\r\n            this.clearAuthData();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Устанавливает данные аутентификации\r\n     */\r\n    setAuthData(token, userData) {\r\n        this.isAuthenticated = true;\r\n        this.userData = userData;\r\n\r\n        localStorage.setItem(this.tokenKey, token);\r\n        localStorage.setItem(this.userDataKey, JSON.stringify(userData));\r\n\r\n        // Устанавливаем токен в cookie для серверных запросов\r\n        document.cookie = `auth_token=${token}; path=/; max-age=3600; samesite=strict`;\r\n\r\n        this.updateUI();\r\n    }\r\n\r\n    /**\r\n     * Очищает данные аутентификации\r\n     */\r\n    clearAuthData() {\r\n        this.isAuthenticated = false;\r\n        this.userData = null;\r\n\r\n        localStorage.removeItem(this.tokenKey);\r\n        localStorage.removeItem(this.userDataKey);\r\n\r\n        // Удаляем cookie\r\n        document.cookie = 'auth_token=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT';\r\n\r\n        this.updateUI();\r\n    }\r\n\r\n    /**\r\n     * Выполняет выход из системы\r\n     */\r\n    async logout() {\r\n        this.clearAuthData();\r\n        this.showNotification('Вы вышли из системы', 'info');\r\n\r\n        // Перенаправляем на страницу входа IdentityServer\r\n        const identityServerUrl = window.location.protocol + '//' + window.location.hostname + ':55674';\r\n        window.location.href = `${identityServerUrl}/Auth/Login`;\r\n    }\r\n\r\n    /**\r\n     * Получает токен для API запросов\r\n     */\r\n    getAuthToken() {\r\n        return localStorage.getItem(this.tokenKey);\r\n    }\r\n\r\n    /**\r\n     * Создает заголовки для авторизованных запросов\r\n     */\r\n    getAuthHeaders() {\r\n        const token = this.getAuthToken();\r\n        return token ? { 'Authorization': `Bearer ${token}` } : {};\r\n    }\r\n\r\n    /**\r\n     * Обновляет UI в зависимости от состояния авторизации\r\n     */\r\n    updateUI() {\r\n        // Показываем/скрываем элементы для авторизованных пользователей\r\n        const authElements = document.querySelectorAll('[data-auth-required]');\r\n        const guestElements = document.querySelectorAll('[data-guest-only]');\r\n\r\n        authElements.forEach(element => {\r\n            element.style.display = this.isAuthenticated ? 'block' : 'none';\r\n        });\r\n\r\n        guestElements.forEach(element => {\r\n            element.style.display = this.isAuthenticated ? 'none' : 'block';\r\n        });\r\n\r\n        // Обновляем информацию о пользователе\r\n        if (this.isAuthenticated && this.userData) {\r\n            const userEmailElements = document.querySelectorAll('[data-user-email]');            \r\n\r\n            userEmailElements.forEach(element => {\r\n                element.textContent = this.userData.email;\r\n            });            \r\n        }\r\n\r\n        // Обновляем состояние кнопок\r\n        const loginButtons = document.querySelectorAll('[data-login-btn]');\r\n        const logoutButtons = document.querySelectorAll('[data-logout-btn]');\r\n\r\n        loginButtons.forEach(btn => {\r\n            btn.style.display = this.isAuthenticated ? 'none' : 'inline-block';\r\n        });\r\n\r\n        logoutButtons.forEach(btn => {\r\n            btn.style.display = this.isAuthenticated ? 'inline-block' : 'none';\r\n            btn.onclick = () => this.logout();\r\n        });\r\n\r\n        // Генерируем кастомное событие для других скриптов\r\n        const authEvent = new CustomEvent('authStateChanged', {\r\n            detail: {\r\n                isAuthenticated: this.isAuthenticated,\r\n                userData: this.userData\r\n            }\r\n        });\r\n        document.dispatchEvent(authEvent);\r\n    }\r\n\r\n    /**\r\n     * Удаляет код аутентификации из URL\r\n     */\r\n    clearAuthCodeFromUrl() {\r\n        const url = new URL(window.location);\r\n        url.searchParams.delete('auth');\r\n        window.history.replaceState(null, '', url);\r\n    }\r\n\r\n    /**\r\n     * Показывает уведомление пользователю\r\n     */\r\n    showNotification(message, type = 'info') {\r\n        // Создаем простое уведомление\r\n        const notification = document.createElement('div');\r\n        notification.className = `notification notification-${type}`;\r\n        notification.textContent = message;\r\n\r\n        notification.style.cssText = `\r\n            position: fixed;\r\n            top: 20px;\r\n            right: 20px;\r\n            padding: 12px 20px;\r\n            border-radius: 4px;\r\n            color: white;\r\n            z-index: 10000;\r\n            font-weight: 500;\r\n            box-shadow: 0 4px 8px rgba(0,0,0,0.1);\r\n            ${type === 'success' ? 'background-color: #10B981;' : ''}\r\n            ${type === 'error' ? 'background-color: #EF4444;' : ''}\r\n            ${type === 'info' ? 'background-color: #3B82F6;' : ''}\r\n        `;\r\n\r\n        document.body.appendChild(notification);\r\n\r\n        // Автоматически удаляем через 5 секунд\r\n        setTimeout(() => {\r\n            notification.remove();\r\n        }, 5000);\r\n\r\n        // Добавляем возможность закрытия по клику\r\n        notification.onclick = () => notification.remove();\r\n    }\r\n}\r\n\r\n// Глобальный экземпляр менеджера аутентификации\r\nwindow.authManager = new AuthManager();\r\n\r\n// Полезные глобальные функции\r\nwindow.isAuthenticated = () => window.authManager.isAuthenticated;\r\nwindow.getCurrentUser = () => window.authManager.userData;\r\nwindow.logout = () => window.authManager.logout();","class GetDataFromUserService {\r\n    constructor () {\r\n        this.userApiAddress = 'http://localhost:55680';\r\n    }\r\n\r\n    async GetUserById(id) {\r\n        try {\r\n            const response = await fetch(`${this.userApiAddress}/api/Users/${id}`, {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' }\r\n            });\r\n            if (!response.ok) throw new Error(await response.text());\r\n            const data = await response.json();\r\n            console.log(`Пользователь ${id}:`, data);\r\n            return data;\r\n        } catch (error) {\r\n            console.error(`Ошибка получения пользователя ${id}:`, error);\r\n        }\r\n    }\r\n\r\n    async InsertUserDataToProfile () {\r\n        const userIdLinks = document.querySelectorAll('a[data-user-id]');\r\n        userIdLinks.forEach(element => {\r\n            const link = element.href;\r\n            element.href = `/user/${window.authManager.userData.userId}`;\r\n        });\r\n\r\n        try {\r\n            await this.GetUserById(window.authManager.userData.userId).then(user => {\r\n                console.log('Данные пользователя:', user);\r\n                \r\n                // Здесь можно обновить DOM с полными данными пользователя\r\n                // Например, найти элементы и заполнить их данными\r\n                const firstNameElements = document.querySelectorAll('[data-user-firstname]');\r\n                const lastNameElements = document.querySelectorAll('[data-user-lastname]');\r\n                \r\n                firstNameElements.forEach(element => {\r\n                    element.textContent = user.firstName;\r\n                });\r\n                \r\n                lastNameElements.forEach(element => {\r\n                    element.textContent = user.lastName;\r\n                });\r\n            }).catch(error => {\r\n                console.error('Ошибка получения данных пользователя:', error);\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n}\r\n\r\ndocument.addEventListener('authStateChanged', () => {\r\n    const { isAuthenticated, userData } = event.detail;\r\n\r\n    if (isAuthenticated && userData) {\r\n        const userDataService = new GetDataFromUserService();\r\n        userDataService.InsertUserDataToProfile();\r\n    }\r\n});","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_regeneratorDefine","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_toPrimitive","_typeof","toPrimitive","String","Number","AuthManager","tokenKey","userDataKey","authApiUrl","isAuthenticated","userData","initialize","_initialize","_callee","urlParams","authCode","_context","URLSearchParams","window","location","search","get","console","log","exchangeAuthCode","clearAuthCodeFromUrl","checkStoredToken","updateUI","_exchangeAuthCode","_callee2","response","result","_t","_context2","fetch","concat","method","headers","body","JSON","stringify","json","ok","setAuthData","token","userId","email","phoneNumber","showNotification","warn","message","clearAuthData","error","_x","_checkStoredToken","_callee3","_t2","_context3","localStorage","getItem","setItem","document","cookie","removeItem","_logout","_callee4","identityServerUrl","_context4","protocol","hostname","href","logout","getAuthToken","getAuthHeaders","_this","authElements","querySelectorAll","guestElements","forEach","element","style","display","userEmailElements","textContent","loginButtons","logoutButtons","btn","onclick","authEvent","CustomEvent","detail","dispatchEvent","url","URL","searchParams","history","replaceState","type","undefined","notification","createElement","className","cssText","appendChild","setTimeout","remove","authManager","getCurrentUser","GetDataFromUserService","userApiAddress","_GetUserById","id","data","_t3","Error","text","GetUserById","_InsertUserDataToProfile","userIdLinks","_t4","link","user","firstNameElements","lastNameElements","firstName","lastName","InsertUserDataToProfile","addEventListener","_event$detail","event","userDataService"],"sourceRoot":""}