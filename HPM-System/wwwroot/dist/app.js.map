{"version":3,"file":"app.js","mappings":"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","sources":["webpack://hpm-system/./wwwroot/css/btn.css","webpack://hpm-system/./wwwroot/css/card.css","webpack://hpm-system/./wwwroot/css/grid.css","webpack://hpm-system/./wwwroot/css/main.css","webpack://hpm-system/./wwwroot/css/modal.css","webpack://hpm-system/./wwwroot/css/notification.css","webpack://hpm-system/./wwwroot/css/profile-group.css","webpack://hpm-system/./wwwroot/css/variables.css","webpack://hpm-system/./wwwroot/js/AuthManager.js","webpack://hpm-system/./wwwroot/js/Modal.js","webpack://hpm-system/./wwwroot/js/UserProfile.js","webpack://hpm-system/./wwwroot/js/UserValidator.js","webpack://hpm-system/webpack/bootstrap","webpack://hpm-system/webpack/runtime/define property getters","webpack://hpm-system/webpack/runtime/hasOwnProperty shorthand","webpack://hpm-system/webpack/runtime/make namespace object","webpack://hpm-system/webpack/before-startup","webpack://hpm-system/webpack/startup","webpack://hpm-system/webpack/after-startup"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","class AuthManager {\r\n    constructor() {\r\n        this.tokenKey = 'hpm_auth_token';\r\n        this.userDataKey = 'hpm_user_data';\r\n        this.authApiUrl = '/api/auth';\r\n        this.isAuthenticated = false;\r\n        this.userData = null;\r\n\r\n        // Автоматически инициализируем при загрузке\r\n        this.initialize();\r\n    }\r\n\r\n    /**\r\n     * Инициализация менеджера аутентификации\r\n     */\r\n    async initialize() {\r\n        // Проверяем наличие кода аутентификации в URL\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        const authCode = urlParams.get('auth');\r\n\r\n        if (authCode) {\r\n            console.log('Найден код аутентификации в URL');\r\n            await this.exchangeAuthCode(authCode);\r\n\r\n            // Удаляем код из URL после обработки\r\n            this.clearAuthCodeFromUrl();\r\n        } else {\r\n            // Проверяем сохраненный токен\r\n            await this.checkStoredToken();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Обменивает код аутентификации на токен\r\n     */\r\n    async exchangeAuthCode(authCode) {\r\n        try {\r\n            const response = await fetch(`${this.authApiUrl}/exchange-code`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ authCode: authCode })\r\n            });\r\n\r\n            const result = await response.json();\r\n\r\n            if (response.ok && result.isAuthenticated) {\r\n                this.setAuthData(result.token, {\r\n                    userId: result.userId,\r\n                    email: result.email,\r\n                    phoneNumber: result.phoneNumber\r\n                });\r\n\r\n                console.log('✅ Авторизация успешна');\r\n                this.showNotification('Добро пожаловать!', 'success');\r\n            } else {\r\n                console.warn('❌ Ошибка при обмене кода аутентификации:', result.message);\r\n                this.clearAuthData();\r\n                this.showNotification(result.message || 'Ошибка авторизации', 'error');\r\n            }\r\n        } catch (error) {\r\n            console.error('❌ Ошибка при обмене кода аутентификации:', error);\r\n            this.clearAuthData();\r\n            this.showNotification('Произошла ошибка при авторизации', 'error');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Проверяет сохраненный токен\r\n     */\r\n    async checkStoredToken() {\r\n        const token = localStorage.getItem(this.tokenKey);\r\n\r\n        if (!token) {\r\n            this.clearAuthData();\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`${this.authApiUrl}/validate-token`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ token: token })\r\n            });\r\n\r\n            const result = await response.json();\r\n\r\n            if (response.ok && result.isAuthenticated) {\r\n                this.setAuthData(token, {\r\n                    userId: result.userId,\r\n                    email: result.email,\r\n                    phoneNumber: result.phoneNumber\r\n                });\r\n                console.log('✅ Токен валиден, пользователь авторизован');\r\n            } else {\r\n                console.log('❌ Токен невалиден, очищаем данные');\r\n                this.clearAuthData();\r\n            }\r\n        } catch (error) {\r\n            console.error('❌ Ошибка при проверке токена:', error);\r\n            this.clearAuthData();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Устанавливает данные аутентификации\r\n     */\r\n    setAuthData(token, userData) {\r\n        this.isAuthenticated = true;\r\n        this.userData = userData;\r\n\r\n        localStorage.setItem(this.tokenKey, token);\r\n        localStorage.setItem(this.userDataKey, JSON.stringify(userData));\r\n\r\n        // Устанавливаем токен в cookie для серверных запросов\r\n        document.cookie = `auth_token=${token}; path=/; max-age=3600; samesite=strict`;\r\n\r\n        this.updateUI();\r\n    }\r\n\r\n    /**\r\n     * Очищает данные аутентификации\r\n     */\r\n    clearAuthData() {\r\n        this.isAuthenticated = false;\r\n        this.userData = null;\r\n\r\n        localStorage.removeItem(this.tokenKey);\r\n        localStorage.removeItem(this.userDataKey);\r\n\r\n        // Удаляем cookie\r\n        document.cookie = 'auth_token=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT';\r\n\r\n        this.updateUI();\r\n    }\r\n\r\n    /**\r\n     * Выполняет выход из системы\r\n     */\r\n    async logout() {\r\n        this.clearAuthData();\r\n        this.showNotification('Вы вышли из системы', 'info');\r\n\r\n        // Перенаправляем на страницу входа IdentityServer\r\n        const identityServerUrl = window.location.protocol + '//' + window.location.hostname + ':55674';\r\n        window.location.href = `${identityServerUrl}/Auth/Login`;\r\n    }\r\n\r\n    /**\r\n     * Получает токен для API запросов\r\n     */\r\n    getAuthToken() {\r\n        return localStorage.getItem(this.tokenKey);\r\n    }\r\n\r\n    /**\r\n     * Создает заголовки для авторизованных запросов\r\n     */\r\n    getAuthHeaders() {\r\n        const token = this.getAuthToken();\r\n        return token ? { 'Authorization': `Bearer ${token}` } : {};\r\n    }\r\n\r\n    /**\r\n     * Обновляет UI в зависимости от состояния авторизации\r\n     */\r\n    updateUI() {\r\n        // Показываем/скрываем элементы для авторизованных пользователей\r\n        const authElements = document.querySelectorAll('[data-auth-required]');\r\n        const guestElements = document.querySelectorAll('[data-guest-only]');\r\n\r\n        authElements.forEach(element => {\r\n            element.style.display = this.isAuthenticated ? 'block' : 'none';\r\n        });\r\n\r\n        guestElements.forEach(element => {\r\n            element.style.display = this.isAuthenticated ? 'none' : 'block';\r\n        });\r\n\r\n        // Обновляем информацию о пользователе\r\n        if (this.isAuthenticated && this.userData) {\r\n            const userEmailElements = document.querySelectorAll('[data-user-email]');            \r\n\r\n            userEmailElements.forEach(element => {\r\n                element.textContent = this.userData.email;\r\n            });            \r\n        }\r\n\r\n        // Обновляем состояние кнопок\r\n        const loginButtons = document.querySelectorAll('[data-login-btn]');\r\n        const logoutButtons = document.querySelectorAll('[data-logout-btn]');\r\n\r\n        loginButtons.forEach(btn => {\r\n            btn.style.display = this.isAuthenticated ? 'none' : 'inline-block';\r\n        });\r\n\r\n        logoutButtons.forEach(btn => {\r\n            btn.style.display = this.isAuthenticated ? 'inline-block' : 'none';\r\n            btn.onclick = () => this.logout();\r\n        });\r\n\r\n        // Генерируем кастомное событие для других скриптов\r\n        const authEvent = new CustomEvent('authStateChanged', {\r\n            detail: {\r\n                isAuthenticated: this.isAuthenticated,\r\n                userData: this.userData\r\n            }\r\n        });\r\n        document.dispatchEvent(authEvent);\r\n        console.log(`генерация события`);\r\n    }\r\n\r\n    /**\r\n     * Удаляет код аутентификации из URL\r\n     */\r\n    clearAuthCodeFromUrl() {\r\n        const url = new URL(window.location);\r\n        url.searchParams.delete('auth');\r\n        window.history.replaceState(null, '', url);\r\n    }\r\n\r\n    /**\r\n     * Показывает уведомление пользователю\r\n     */\r\n    showNotification(message, type = 'info') {\r\n        // Создаем простое уведомление\r\n        const notification = document.createElement('div');\r\n        notification.className = `notification notification-${type}`;\r\n        notification.textContent = message;\r\n\r\n        notification.style.cssText = `\r\n            position: fixed;\r\n            top: 20px;\r\n            right: 20px;\r\n            padding: 12px 20px;\r\n            border-radius: 4px;\r\n            color: white;\r\n            z-index: 10000;\r\n            font-weight: 500;\r\n            box-shadow: 0 4px 8px rgba(0,0,0,0.1);\r\n            ${type === 'success' ? 'background-color: #10B981;' : ''}\r\n            ${type === 'error' ? 'background-color: #EF4444;' : ''}\r\n            ${type === 'info' ? 'background-color: #3B82F6;' : ''}\r\n        `;\r\n\r\n        document.body.appendChild(notification);\r\n\r\n        // Автоматически удаляем через 5 секунд\r\n        setTimeout(() => {\r\n            notification.remove();\r\n        }, 5000);\r\n\r\n        // Добавляем возможность закрытия по клику\r\n        notification.onclick = () => notification.remove();\r\n    }\r\n}\r\n\r\n// Глобальный экземпляр менеджера аутентификации\r\nwindow.authManager = new AuthManager();\r\n\r\n// Полезные глобальные функции\r\nwindow.isAuthenticated = () => window.authManager.isAuthenticated;\r\nwindow.getCurrentUser = () => window.authManager.userData;\r\nwindow.logout = () => window.authManager.logout();","export class Modal {\r\n    constructor () {\r\n        this.OpenModal();\r\n        this.CloseModal();\r\n        this.CloseModalOnOutsideClick();\r\n    }\r\n\r\n    OpenModal () {\r\n      document.querySelectorAll('[data-modal=\"open\"]').forEach(modalCall => {\r\n        modalCall.addEventListener('click', function () {\r\n          document.querySelector('.modal-overview').classList.add('active');\r\n        });\r\n      });\r\n    }\r\n\r\n    CloseModal () {\r\n      let crossModal = document.querySelectorAll('.modal-close');\r\n      crossModal.forEach(cross => {\r\n        cross.addEventListener('click', () => {\r\n          cross.closest('.modal-overview').classList.remove('active');\r\n        });\r\n      });\r\n    }\r\n\r\n    CloseModalOnOutsideClick () {\r\n      const modalOverview = document.querySelector('.modal-overview');\r\n      modalOverview.addEventListener('click', (event) => {        \r\n        if (!event.target.classList.contains('modal-content-wrapper') && event.target.closest('.modal-content-wrapper') == null) {          \r\n          modalOverview.classList.remove('active');\r\n        }\r\n      });\r\n    }\r\n\r\n    static ShowNotification(text, color) {\r\n        const notification = document.createElement('div');\r\n        notification.className = 'notification';\r\n        notification.textContent = text;\r\n        notification.style.backgroundColor = color;\r\n        \r\n        // Добавляем уведомление в документ\r\n        document.body.appendChild(notification);\r\n        \r\n        // Через 2 секунды удаляем уведомление\r\n        setTimeout(() => {\r\n            if (notification.parentNode) {\r\n                notification.parentNode.removeChild(notification);\r\n            }\r\n        }, 2000);\r\n    }\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    new Modal();\r\n})","import { UserValidator } from './UserValidator.js';\r\nimport { Modal } from './Modal.js';\r\n\r\nclass UserProfile {\r\n    constructor () {\r\n        this.userApiAddress = 'http://localhost:55680';\r\n        this.validator = new UserValidator();\r\n    }\r\n\r\n    async GetUserById(userId) {\r\n        try {\r\n            const response = await fetch(`${this.userApiAddress}/api/Users/${userId}`, {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/json' }\r\n            });\r\n            if (!response.ok) throw new Error(await response.text());\r\n            const data = await response.json();\r\n            console.log(`Пользователь ${userId}:`, data);\r\n            return data;\r\n        } catch (error) {\r\n            console.error(`Ошибка получения пользователя ${userId}:`, error);\r\n        }\r\n    }\r\n\r\n    async GetCarsByUserId(userId) {\r\n        try {\r\n            const response = await fetch(`${this.userApiAddress}/api/Cars/by-user/${userId}`, {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/json' }\r\n            });\r\n            if (!response.ok) throw new Error(await response.text());\r\n            const data = await response.json();\r\n            console.log(`Автомобили пользователя ${userId}:`, data);\r\n            return data;\r\n        } catch (error) {\r\n            console.error(`Ошибка получения автомобилей пользователя ${userId}:`, error);\r\n        }\r\n    }\r\n\r\n    async InsertUserDataToCardOnMainPage (userId) {\r\n        const userIdLinks = document.querySelectorAll('a.user-link[data-user-id]');\r\n        userIdLinks.forEach(element => {\r\n            const link = element.href;\r\n            element.href = `/user/${userId}`;\r\n        });\r\n\r\n        try {\r\n            await this.GetUserById(userId).then(user => {\r\n                \r\n                const fullName = document.querySelector('[data-user-fullname]');\r\n                const phone = document.querySelector('[data-user-phone]')\r\n                const carsCount = document.querySelector('[data-user-carslist]');\r\n\r\n                \r\n                fullName.textContent = `${user.firstName} ${user.lastName} ${user.patronymic}`;\r\n                phone.textContent = user.phoneNumber;\r\n\r\n                if (user.cars.length == 0) {\r\n                    carsCount.remove();\r\n                } else if (user.cars.length == 1) {\r\n                    const car = user.cars[0];\r\n\r\n                    carsCount.textContent = `${car.color} ${car.mark} ${car.model}, ${car.number}`;\r\n                } else {\r\n                    carsCount.textContent = `${user.cars.length} машины`;\r\n                }\r\n            }).catch(error => {\r\n                console.error('Ошибка получения данных пользователя:', error);\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    async InsertCarsToUserProfile (userId) {\r\n        const cars = await this.GetCarsByUserId(userId);\r\n        const carsContainer = document.querySelector('.profile-group[data-group=\"cars\"] .cars-list');\r\n        carsContainer.innerHTML = '';     \r\n        cars.forEach(car => {\r\n            this.SetUserCar(car, carsContainer);\r\n        });\r\n    }\r\n\r\n    async InsertUserDataToProfile (userId) {\r\n        try {\r\n            await this.GetUserById(userId).then(user => {\r\n                const setValue = (id, value) => {\r\n                    const element = document.getElementById(id);\r\n                    if (element) {\r\n                        // Специальная обработка для даты рождения\r\n                        if (id === 'birthday' && value) {\r\n                            // Преобразуем ISO строку в формат YYYY-MM-DD\r\n                            const date = new Date(value);\r\n                            const year = date.getFullYear();\r\n                            const month = String(date.getMonth() + 1).padStart(2, '0');\r\n                            const day = String(date.getDate()).padStart(2, '0');\r\n                            element.value = `${year}-${month}-${day}`;\r\n                        } else {\r\n                            element.value = value !== null && value !== '' ? value : '';\r\n                        }\r\n                    }\r\n                };\r\n                \r\n                setValue('firstName', user.firstName);\r\n                setValue('lastName', user.lastName);\r\n                setValue('patronymic', user.patronymic);\r\n                setValue('birthday', user.birthday);\r\n                setValue('phoneNumber', user.phoneNumber);\r\n                setValue('email', user.email);\r\n            }).catch(error => {\r\n                console.error('Ошибка получения данных пользователя:', error);\r\n            });\r\n\r\n            await this.InsertCarsToUserProfile(userId);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    SetCarTemplate (car) {\r\n        let buttonDelCar = `\r\n        <div class=\"remove-car\" data-action=\"remove-car-from-user\" data-car-id=\"${car.id}\" title=\"Удалить этот автомобиль\">\r\n            &#10060;\r\n        </div>`;\r\n        let disabledOrNot = 'disabled';\r\n\r\n        if (!Object.keys(car).length) {\r\n            car.id = '';\r\n            car.mark = '';\r\n            car.model = '';\r\n            car.color = '';\r\n            car.number = '';\r\n            car.userId = window.authManager.userData.userId;\r\n\r\n            buttonDelCar = '';\r\n            disabledOrNot = '';\r\n        }\r\n\r\n        const carTemplate = `\r\n            <div class=\"car\" data-car-id=\"${car.id}\">\r\n                <div class=\"form-group\">\r\n                    <input ${disabledOrNot} type=\"text\" placeholder=\" \" name=\"mark\" id=\"mark-${car.id}\" value=\"${car.mark}\" />\r\n                    <label for=\"mark-${car.id}\">Марка</label>\r\n                    <div class=\"error invisible\" data-error=\"mark\">Неверная марка машины</div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input ${disabledOrNot} type=\"text\" placeholder=\" \" name=\"model\" id=\"model-${car.id}\" value=\"${car.model}\" />\r\n                    <label for=\"model-${car.id}\">Модель</label>\r\n                    <div class=\"error invisible\" data-error=\"model\">Неверная модель машины</div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input ${disabledOrNot} type=\"text\" placeholder=\" \" name=\"color\" id=\"color-${car.id}\" value=\"${car.color}\" />\r\n                    <label for=\"color-${car.id}\">Цвет</label>\r\n                    <div class=\"error invisible\" data-error=\"color\">Неверный цвет машины</div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input ${disabledOrNot} type=\"text\" placeholder=\" \" name=\"number\" id=\"number-${car.id}\" value=\"${car.number}\" />\r\n                    <label for=\"number-${car.id}\">Номер</label>\r\n                    <div class=\"error invisible\" data-error=\"number\">Неверный номер машины</div>\r\n                </div>\r\n                ${buttonDelCar}\r\n            </div>\r\n        `;\r\n\r\n        return carTemplate;\r\n    }\r\n\r\n    SetUserCar (car, carsList) {\r\n        \r\n        let carTemplate = this.SetCarTemplate(car);        \r\n       \r\n        if (carsList) {\r\n            carsList.insertAdjacentHTML('beforeend', carTemplate);\r\n        }\r\n    }\r\n\r\n    CollectUserDataFromProfile() {\r\n        let userData = {};\r\n\r\n        //Собираем данные по пользователю\r\n        const userProfileInputs = document.querySelectorAll('.profile-group[data-group=\"user\"] input');\r\n        userProfileInputs.forEach(input => {\r\n            const inputKey = input.id;\r\n            let inputValue = input.value;\r\n\r\n            // Обработка даты рождения\r\n            if (inputKey === 'birthday' && inputValue) {\r\n                // Преобразуем дату в формат ISO с UTC\r\n                let date = new Date(inputValue);\r\n                // Устанавливаем время в 00:00:00 и конвертируем в UTC\r\n                date.setHours(0, 0, 0, 0);\r\n                inputValue = date.toISOString();\r\n            }\r\n\r\n            userData[inputKey] = inputValue;\r\n        });\r\n\r\n        return userData;\r\n    }\r\n\r\n    CollectCarsDataFromProfile() {\r\n        let carsData = [];\r\n\r\n        // собираем данные по машинам из профиля\r\n        const cars = document.querySelectorAll('.profile-group[data-group=\"cars\"] .car');\r\n        cars.forEach(car => {\r\n            const carData = {\r\n                id: car.dataset.carId || '',\r\n                mark: car.querySelector('input[name=\"mark\"]')?.value || '',\r\n                model: car.querySelector('input[name=\"model\"]')?.value || '',\r\n                color: car.querySelector('input[name=\"color\"]')?.value || '',\r\n                number: car.querySelector('input[name=\"number\"]')?.value || '',\r\n                userId: window.authManager.userData.userId\r\n            };\r\n            carsData.push(carData);\r\n        });\r\n\r\n        return carsData;\r\n    }\r\n\r\n    CollectCarsDataFromModal () {\r\n        let carData = {};\r\n\r\n        // собираем данные по машинам\r\n        let cars = document.querySelectorAll('.car-modal .car');\r\n        cars.forEach(car => {            \r\n            carData = {\r\n                mark: car.querySelector('input[name=\"mark\"]')?.value || '',\r\n                model: car.querySelector('input[name=\"model\"]')?.value || '',\r\n                color: car.querySelector('input[name=\"color\"]')?.value || '',\r\n                number: car.querySelector('input[name=\"number\"]')?.value || '',\r\n                userId: window.authManager.userData.userId\r\n            };\r\n        });\r\n\r\n        console.log(`Добавляемые машины:`);\r\n        console.log(carData);\r\n        return carData;\r\n    }\r\n\r\n    ShowValidationErrors(errors) {\r\n        // Очищаем все предыдущие ошибки\r\n        document.querySelectorAll('.error').forEach(error => {\r\n            error.classList.add('invisible');\r\n        });\r\n\r\n        // Показываем ошибки пользователя\r\n        if (errors.user) {\r\n            Object.keys(errors.user).forEach(field => {\r\n                const errorElement = document.querySelector(`[data-error=\"${field}\"]`);\r\n                if (errorElement) {\r\n                    errorElement.textContent = errors.user[field];\r\n                    errorElement.classList.remove('invisible');\r\n                }\r\n            });\r\n        }\r\n\r\n        // Показываем ошибки автомобилей\r\n        if (errors.cars && errors.cars.length > 0) {\r\n            errors.cars.forEach((carErrors, index) => {\r\n                Object.keys(carErrors).forEach(field => {\r\n                    const errorElement = document.querySelector(`.profile-group[data-group=\"cars\"] .car:nth-child(${index + 1}) [data-error=\"${field}\"]`);\r\n                    if (errorElement) {\r\n                        errorElement.textContent = carErrors[field];\r\n                        errorElement.classList.remove('invisible');\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    async UpdateUserToDB (id, userData) {        \r\n        try {\r\n            // Валидация данных пользователя\r\n            const validation = this.validator.validateUserData(userData);\r\n            \r\n            // Собираем данные автомобилей для валидации\r\n            const carsData = this.CollectCarsDataFromProfile();\r\n            \r\n            // Валидация автомобилей\r\n            const carsValidation = this.ValidateCarsData(carsData);\r\n            \r\n            // Объединяем ошибки\r\n            const allErrors = {\r\n                user: validation.errors.user,\r\n                cars: carsValidation.errors\r\n            };\r\n\r\n            if (!validation.isValid || !carsValidation.isValid) {\r\n                this.ShowValidationErrors(allErrors);\r\n                Modal.ShowNotification('Исправьте ошибки в форме', 'red');\r\n                return;\r\n            }\r\n\r\n            // Если валидация прошла успешно, очищаем ошибки\r\n            document.querySelectorAll('.error').forEach(error => {\r\n                error.classList.add('invisible');\r\n            });\r\n\r\n            const response = await fetch(`${this.userApiAddress}/api/Users/${id}`, {\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ ...userData, id })\r\n            });\r\n            if (!response.ok) throw new Error(await response.text());\r\n            console.log(`Пользователь ${id} обновлён`);\r\n            Modal.ShowNotification('Данные пользователя сохранены', 'green');\r\n        } catch (error) {\r\n            console.error(`Ошибка обновления пользователя ${id}:`, error);\r\n            Modal.ShowNotification('Ошибка сохранения данных', 'red');\r\n        }\r\n    }\r\n\r\n    ValidateCarsData(carsData) {\r\n        const errors = [];\r\n        let isValid = true;\r\n\r\n        carsData.forEach(car => {\r\n            const carValidation = this.validator.validateCar(car);\r\n            if (!carValidation.isValid) {\r\n                errors.push(carValidation.errors);\r\n                isValid = false;\r\n            } else {\r\n                errors.push({});\r\n            }\r\n        });\r\n\r\n        // Проверка уникальности номеров\r\n        const duplicateIndices = this.validator.validateUniqueCarNumbers(carsData);\r\n        if (duplicateIndices.length > 0) {\r\n            duplicateIndices.forEach(index => {\r\n                if (!errors[index]) errors[index] = {};\r\n                errors[index].number = 'Номер автомобиля уже существует';\r\n                isValid = false;\r\n            });\r\n        }\r\n\r\n        return { isValid, errors };\r\n    }\r\n\r\n    ValidateCarInModal() {\r\n        const carData = this.CollectCarsDataFromModal();\r\n        const validation = this.validator.validateCar(carData);\r\n        \r\n        // Очищаем ошибки в модальном окне\r\n        document.querySelectorAll('.car-modal .error').forEach(error => {\r\n            error.classList.add('invisible');\r\n        });\r\n\r\n        if (!validation.isValid) {\r\n            Object.keys(validation.errors).forEach(field => {\r\n                const errorElement = document.querySelector(`.car-modal [data-error=\"${field}\"]`);\r\n                if (errorElement) {\r\n                    errorElement.textContent = validation.errors[field];\r\n                    errorElement.classList.remove('invisible');\r\n                }\r\n            });\r\n            return false;\r\n        }\r\n        \r\n        return true;\r\n    }\r\n\r\n    async AddCarToUser (userId) {\r\n        // Валидация данных автомобиля\r\n        if (!this.ValidateCarInModal()) {\r\n            Modal.ShowNotification('Исправьте ошибки в форме автомобиля', 'red');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`${this.userApiAddress}/api/Cars`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(this.CollectCarsDataFromModal())\r\n            });\r\n            if (!response.ok) throw new Error(await response.text());\r\n            const data = await response.json();\r\n            console.log('Автомобиль создан:', data);\r\n\r\n            //инсертим автомобиль в список\r\n            await this.InsertCarsToUserProfile(userId);\r\n            //зачищаем модалку и закрываем её\r\n            document.querySelectorAll('.car-modal input').forEach(input => {\r\n                input.value = '';\r\n            });\r\n            document.querySelector('.car-modal').closest('.modal-overview').classList.remove('active');\r\n            Modal.ShowNotification('Автомобиль успешно добавлен', 'green');\r\n\r\n            return data;\r\n        } catch (error) {\r\n            console.error('Ошибка создания автомобиля:', error);\r\n            Modal.ShowNotification('Ошибка добавления автомобиля', 'red');\r\n        }\r\n    }\r\n\r\n    async RemoveCarFromUser (carId) {\r\n        try {\r\n            const response = await fetch(`${this.userApiAddress}/api/Cars/${carId}`, {\r\n                method: 'DELETE',\r\n                headers: { 'Content-Type': 'application/json' }\r\n            });\r\n            if (!response.ok) throw new Error(await response.text());\r\n            console.log(`Автомобиль ${carId} удалён`);\r\n            //удоляем строку с отображением авто из профиля\r\n            document.querySelector(`.profile-group .car[data-car-id=\"${carId}\"]`).remove();\r\n            \r\n            Modal.ShowNotification('Автомобиль успешно удалён', 'green');\r\n        } catch (error) {\r\n            console.error(`Ошибка удаления автомобиля ${carId}:`, error);\r\n            Modal.ShowNotification('Ошибка удаления автомобиля', 'red');\r\n        }\r\n    }\r\n}\r\n\r\ndocument.addEventListener('authStateChanged', () => {\r\n    const { isAuthenticated, userData } = event.detail;\r\n\r\n    if (isAuthenticated && userData) {\r\n        const userProfile = new UserProfile();\r\n        const userId = window.authManager.userData.userId;\r\n\r\n        if (window.location.pathname == '/') {\r\n            userProfile.InsertUserDataToCardOnMainPage(userId);\r\n        }\r\n        \r\n        if (document.getElementById('user-profile')) {\r\n            userProfile.InsertUserDataToProfile (userId);\r\n\r\n            document.querySelector(`[data-action=\"save-user-data\"]`).addEventListener('click', () => {\r\n                userProfile.UpdateUserToDB(window.authManager.userData.userId, userProfile.CollectUserDataFromProfile());\r\n            });\r\n\r\n            document.querySelector(`[data-action=\"add-car-to-user\"]`).addEventListener('click', () => {\r\n                userProfile.AddCarToUser(window.authManager.userData.userId);\r\n            });\r\n\r\n            document.addEventListener('click', (e) => {            \r\n                if (e.target.dataset.action == 'remove-car-from-user') {\r\n                    const carId = e.target.dataset.carId;\r\n                    userProfile.RemoveCarFromUser(carId);\r\n                }\r\n            });\r\n        }\r\n    }\r\n});","export class UserValidator {\r\n    constructor() {\r\n        // Разрешенные буквы в российских номерах (совпадают с латинскими)\r\n        this.allowedLetters = 'АВЕКМНОРСТУХ';\r\n\r\n        // Коды регионов России\r\n        this.validRegionCodes = [\r\n            // Основные регионы\r\n            '01', '02', '03', '04', '05', '06', '07', '08', '09', '10',\r\n            '11', '12', '13', '14', '15', '16', '17', '18', '19', '20',\r\n            '21', '22', '23', '24', '25', '26', '27', '28', '29', '30',\r\n            '31', '32', '33', '34', '35', '36', '37', '38', '39', '40',\r\n            '41', '42', '43', '44', '45', '46', '47', '48', '49', '50',\r\n            '51', '52', '53', '54', '55', '56', '57', '58', '59', '60',\r\n            '61', '62', '63', '64', '65', '66', '67', '68', '69', '70',\r\n            '71', '72', '73', '74', '75', '76', '77', '78', '79', '80',\r\n            '81', '82', '83', '84', '85', '86', '87', '88', '89', '90',\r\n            '91', '92', '93', '94', '95', '96', '97', '98', '99',\r\n            // Трёхзначные коды для крупных регионов\r\n            '102', '113', '116', '117', '118', '119', '121', '122', '123',\r\n            '124', '125', '126', '134', '136', '138', '142', '150', '152',\r\n            '154', '159', '161', '163', '164', '173', '174', '177', '178',\r\n            '186', '190', '196', '197', '198', '199', '702', '716', '750',\r\n            '761', '763', '774', '777', '790', '799', '999'\r\n        ];\r\n\r\n        // Запрещенные комбинации\r\n        this.forbiddenCombinations = [\r\n            /.*ХУ[ЙИ].*/,\r\n            /.*БЛ[ЯА].*/,\r\n            /.*П[ИИ]З.*/,\r\n            /.*МУД.*/,\r\n            /.*ГОВ.*/\r\n        ];\r\n    }\r\n\r\n    //Валидация имени/фамилии/отчества\r\n    validateName(name, fieldName, required = true) {\r\n        if (!name || name.trim() === '') {\r\n            if (required) {\r\n                return { isValid: false, error: `${fieldName} обязательно для заполнения` };\r\n            }\r\n            return { isValid: true };\r\n        }\r\n\r\n        if (name.length > 50) {\r\n            return { isValid: false, error: `${fieldName} не может быть длиннее 50 символов` };\r\n        }\r\n\r\n        if (!/^[а-яё\\s\\-']+$/i.test(name)) {\r\n            return { isValid: false, error: `${fieldName} должно содержать только русские буквы, пробелы, дефисы и апострофы` };\r\n        }\r\n\r\n        // Проверка на слишком много пробелов подряд\r\n        if (/\\s{2,}/.test(name)) {\r\n            return { isValid: false, error: `${fieldName} не должно содержать несколько пробелов подряд` };\r\n        }\r\n\r\n        // Проверка на пробелы в начале/конце\r\n        if (name !== name.trim()) {\r\n            return { isValid: false, error: `${fieldName} не должно начинаться или заканчиваться пробелом` };\r\n        }\r\n\r\n        return { isValid: true };\r\n    }\r\n\r\n    /**\r\n     * Валидация даты рождения\r\n     */\r\n    validateBirthday(birthday) {\r\n        if (!birthday) {\r\n            return { isValid: true }; // Дата рождения необязательна\r\n        }\r\n\r\n        const birthDate = new Date(birthday);\r\n        const today = new Date();\r\n        const minDate = new Date(today.getFullYear() - 125, today.getMonth(), today.getDate());\r\n\r\n        if (isNaN(birthDate.getTime())) {\r\n            return { isValid: false, error: 'Неверный формат даты' };\r\n        }\r\n\r\n        if (birthDate > today) {\r\n            return { isValid: false, error: 'Дата рождения не может быть в будущем' };\r\n        }\r\n\r\n        if (birthDate < minDate) {\r\n            return { isValid: false, error: 'Дата рождения не может быть более 125 лет назад' };\r\n        }\r\n\r\n        return { isValid: true };\r\n    }\r\n\r\n    /**\r\n     * Валидация номера телефона\r\n     */\r\n    validatePhoneNumber(phone) {\r\n        if (!phone || phone.trim() === '') {\r\n            return { isValid: false, error: 'Номер телефона обязателен для заполнения' };\r\n        }\r\n\r\n        // Убираем все символы кроме цифр и +\r\n        const cleanPhone = phone.replace(/[\\s\\-\\(\\)]/g, '');\r\n\r\n        // Различные форматы российских номеров\r\n        const phonePatterns = [\r\n            /^(\\+7|8)\\d{10}$/,           // +7XXXXXXXXXX или 8XXXXXXXXXX\r\n            /^\\+7\\d{10}$/,               // +7XXXXXXXXXX\r\n            /^8\\d{10}$/,                 // 8XXXXXXXXXX\r\n            /^7\\d{10}$/                  // 7XXXXXXXXXX\r\n        ];\r\n\r\n        let isValidFormat = false;\r\n        for (const pattern of phonePatterns) {\r\n            if (pattern.test(cleanPhone)) {\r\n                isValidFormat = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!isValidFormat) {\r\n            return { isValid: false, error: 'Неверный формат номера телефона. Используйте российский формат' };\r\n        }\r\n\r\n        return { isValid: true };\r\n    }\r\n\r\n    /**\r\n     * Валидация email\r\n     */\r\n    validateEmail(email) {\r\n        if (!email || email.trim() === '') {\r\n            return { isValid: false, error: 'Email обязателен для заполнения' };\r\n        }\r\n\r\n        if (email.length > 100) {\r\n            return { isValid: false, error: 'Email не может быть длиннее 100 символов' };\r\n        }\r\n\r\n        const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n        if (!emailRegex.test(email)) {\r\n            return { isValid: false, error: 'Неверный формат email' };\r\n        }\r\n\r\n        // Проверка на запрещенные символы в локальной части\r\n        const localPart = email.split('@')[0];\r\n        if (localPart.startsWith('.') || localPart.endsWith('.') || localPart.includes('..')) {\r\n            return { isValid: false, error: 'Неверный формат email' };\r\n        }\r\n\r\n        return { isValid: true };\r\n    }\r\n\r\n    /**\r\n     * Валидация номера автомобиля\r\n     */\r\n    validateCarNumber(number) {\r\n        if (!number || number.trim() === '') {\r\n            return { isValid: false, error: 'Номер автомобиля обязателен' };\r\n        }\r\n\r\n        const cleanNumber = number.replace(/[\\s\\-]/g, '').toUpperCase();\r\n\r\n        // Проверка длины\r\n        if (cleanNumber.length < 8 || cleanNumber.length > 9) {\r\n            return { isValid: false, error: 'Неверная длина номера (должно быть 8-9 символов)' };\r\n        }\r\n\r\n        // Различные форматы российских номеров\r\n        const patterns = [\r\n            { pattern: /^[АВЕКМНОРСТУХ]\\d{3}[АВЕКМНОРСТУХ]{2}\\d{2,3}$/, type: 'стандартный' },\r\n            { pattern: /^[АВЕКМНОРСТУХ]{2}\\d{3}[АВЕКМНОРСТУХ]\\d{2,3}$/, type: 'такси' },\r\n            { pattern: /^[АВЕКМНОРСТУХ]{2}\\d{4}\\d{2,3}$/, type: 'прицеп' },\r\n            { pattern: /^\\d{4}[АВЕКМНОРСТУХ]{2}\\d{2,3}$/, type: 'мотоцикл' },\r\n            { pattern: /^Т\\d{3}[АВЕКМНОРСТУХ]{2}\\d{2,3}$/, type: 'транзит' }\r\n        ];\r\n\r\n        let isValidFormat = false;\r\n        for (const { pattern } of patterns) {\r\n            if (pattern.test(cleanNumber)) {\r\n                isValidFormat = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!isValidFormat) {\r\n            return { isValid: false, error: 'Неверный формат российского номера' };\r\n        }\r\n\r\n        // Проверка кода региона\r\n        const regionCode = cleanNumber.slice(-3);\r\n        const twoDigitCode = regionCode.slice(-2);\r\n        const threeDigitCode = regionCode;\r\n\r\n        if (!this.validRegionCodes.includes(twoDigitCode) && !this.validRegionCodes.includes(threeDigitCode)) {\r\n            return { isValid: false, error: 'Неверный код региона' };\r\n        }\r\n\r\n        // Проверка на запрещенные комбинации\r\n        for (const forbidden of this.forbiddenCombinations) {\r\n            if (forbidden.test(cleanNumber)) {\r\n                return { isValid: false, error: 'Недопустимая комбинация символов в номере' };\r\n            }\r\n        }\r\n\r\n        return { isValid: true };\r\n    }\r\n\r\n    /**\r\n     * Валидация марки/модели автомобиля\r\n     */\r\n    validateCarBrand(value, fieldName) {\r\n        if (!value || value.trim() === '') {\r\n            return { isValid: true }; // Необязательное поле\r\n        }\r\n\r\n        if (value.length > 100) {\r\n            return { isValid: false, error: `${fieldName} не может быть длиннее 100 символов` };\r\n        }\r\n\r\n        if (!/^[а-яёa-z0-9\\s\\-._]+$/i.test(value)) {\r\n            return { isValid: false, error: `${fieldName} должна содержать только буквы, цифры, пробелы, дефисы, точки и подчеркивания` };\r\n        }\r\n\r\n        return { isValid: true };\r\n    }\r\n\r\n    /**\r\n     * Валидация цвета автомобиля\r\n     */\r\n    validateCarColor(color) {\r\n        if (!color || color.trim() === '') {\r\n            return { isValid: true }; // Необязательное поле\r\n        }\r\n\r\n        if (color.length > 50) {\r\n            return { isValid: false, error: 'Цвет не может быть длиннее 50 символов' };\r\n        }\r\n\r\n        if (!/^[а-яёa-z\\s\\-]+$/i.test(color)) {\r\n            return { isValid: false, error: 'Цвет должен содержать только буквы, пробелы и дефисы' };\r\n        }\r\n\r\n        return { isValid: true };\r\n    }\r\n\r\n    /**\r\n     * Валидация одного автомобиля\r\n     */\r\n    validateCar(car) {\r\n        const errors = {};\r\n        let isValid = true;\r\n\r\n        // Валидация марки\r\n        const markValidation = this.validateCarBrand(car.mark, 'Марка');\r\n        if (!markValidation.isValid) {\r\n            errors.mark = markValidation.error;\r\n            isValid = false;\r\n        }\r\n\r\n        // Валидация модели\r\n        const modelValidation = this.validateCarBrand(car.model, 'Модель');\r\n        if (!modelValidation.isValid) {\r\n            errors.model = modelValidation.error;\r\n            isValid = false;\r\n        }\r\n\r\n        // Валидация цвета\r\n        const colorValidation = this.validateCarColor(car.color);\r\n        if (!colorValidation.isValid) {\r\n            errors.color = colorValidation.error;\r\n            isValid = false;\r\n        }\r\n\r\n        // Валидация номера\r\n        const numberValidation = this.validateCarNumber(car.number);\r\n        if (!numberValidation.isValid) {\r\n            errors.number = numberValidation.error;\r\n            isValid = false;\r\n        }\r\n\r\n        return { isValid, errors };\r\n    }\r\n\r\n    /**\r\n     * Проверка уникальности номеров автомобилей\r\n     */\r\n    validateUniqueCarNumbers(cars) {\r\n        const numbers = cars\r\n            .map(car => car.number?.replace(/[\\s\\-]/g, '').toUpperCase())\r\n            .filter(Boolean);\r\n\r\n        const duplicates = [];\r\n        const seen = new Set();\r\n\r\n        numbers.forEach((number, index) => {\r\n            if (seen.has(number)) {\r\n                duplicates.push(index);\r\n            } else {\r\n                seen.add(number);\r\n                // Также добавляем индекс первого вхождения дубликата\r\n                const firstIndex = numbers.indexOf(number);\r\n                if (firstIndex !== index && !duplicates.includes(firstIndex)) {\r\n                    duplicates.push(firstIndex);\r\n                }\r\n            }\r\n        });\r\n\r\n        return duplicates;\r\n    }\r\n\r\n    /**\r\n     * Полная валидация данных пользователя\r\n     */\r\n    validateUserData(userData) {\r\n        const errors = {\r\n            user: {},\r\n            cars: []\r\n        };\r\n        let isValid = true;\r\n\r\n        // Валидация данных пользователя\r\n        const firstNameValidation = this.validateName(userData.firstName, 'Имя', true);\r\n        if (!firstNameValidation.isValid) {\r\n            errors.user.firstName = firstNameValidation.error;\r\n            isValid = false;\r\n        }\r\n\r\n        const lastNameValidation = this.validateName(userData.lastName, 'Фамилия', true);\r\n        if (!lastNameValidation.isValid) {\r\n            errors.user.lastName = lastNameValidation.error;\r\n            isValid = false;\r\n        }\r\n\r\n        const patronymicValidation = this.validateName(userData.patronymic, 'Отчество', false);\r\n        if (!patronymicValidation.isValid) {\r\n            errors.user.patronymic = patronymicValidation.error;\r\n            isValid = false;\r\n        }\r\n\r\n        const birthdayValidation = this.validateBirthday(userData.birthday);\r\n        if (!birthdayValidation.isValid) {\r\n            errors.user.birthday = birthdayValidation.error;\r\n            isValid = false;\r\n        }\r\n\r\n        const phoneValidation = this.validatePhoneNumber(userData.phoneNumber);\r\n        if (!phoneValidation.isValid) {\r\n            errors.user.phoneNumber = phoneValidation.error;\r\n            isValid = false;\r\n        }\r\n\r\n        const emailValidation = this.validateEmail(userData.email);\r\n        if (!emailValidation.isValid) {\r\n            errors.user.email = emailValidation.error;\r\n            isValid = false;\r\n        }\r\n\r\n        return {\r\n            isValid,\r\n            errors\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Форматирование номера автомобиля\r\n     */\r\n    formatCarNumber(input) {\r\n        let value = input.value.replace(/[^а-яёА-ЯЁ0-9ТтTt]/g, '').toUpperCase();\r\n\r\n        // Заменяем русские буквы на допустимые\r\n        const letterMap = {\r\n            'А': 'А', 'В': 'В', 'Е': 'Е', 'К': 'К', 'М': 'М', 'Н': 'Н',\r\n            'О': 'О', 'Р': 'Р', 'С': 'С', 'Т': 'Т', 'У': 'У', 'Х': 'Х',\r\n            'T': 'Т' // Латинская T заменяется на русскую Т\r\n        };\r\n\r\n        value = value.split('').map(char => letterMap[char] || char).join('');\r\n\r\n        // Ограничиваем длину\r\n        if (value.length > 9) {\r\n            value = value.slice(0, 9);\r\n        }\r\n\r\n        input.value = value;\r\n    }\r\n\r\n    /**\r\n     * Форматирование номера телефона\r\n     */\r\n    formatPhoneNumber(input) {\r\n        let value = input.value.replace(/\\D/g, '');\r\n\r\n        if (value.startsWith('8') && value.length > 1) {\r\n            value = '7' + value.slice(1);\r\n        }\r\n\r\n        if (value.startsWith('7') && value.length <= 11) {\r\n            const formatted = value.replace(/^7(\\d{3})(\\d{3})(\\d{2})(\\d{2})/, '+7 ($1) $2-$3-$4');\r\n            input.value = formatted;\r\n        } else if (value.length <= 10) {\r\n            const formatted = value.replace(/^(\\d{3})(\\d{3})(\\d{2})(\\d{2})/, '+7 ($1) $2-$3-$4');\r\n            input.value = formatted;\r\n        }\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(\"./wwwroot/js/UserValidator.js\");\n__webpack_require__(\"./wwwroot/js/UserProfile.js\");\n__webpack_require__(\"./wwwroot/js/Modal.js\");\n__webpack_require__(\"./wwwroot/js/AuthManager.js\");\n__webpack_require__(\"./wwwroot/js/ApartmentProfile.js\");\n__webpack_require__(\"./wwwroot/css/variables.css\");\n__webpack_require__(\"./wwwroot/css/profile-group.css\");\n__webpack_require__(\"./wwwroot/css/notification.css\");\n__webpack_require__(\"./wwwroot/css/modal.css\");\n__webpack_require__(\"./wwwroot/css/main.css\");\n__webpack_require__(\"./wwwroot/css/grid.css\");\n__webpack_require__(\"./wwwroot/css/card.css\");\nvar __webpack_exports__ = __webpack_require__(\"./wwwroot/css/btn.css\");\n",""],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_regeneratorDefine","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_toPrimitive","_typeof","toPrimitive","String","Number","AuthManager","tokenKey","userDataKey","authApiUrl","isAuthenticated","userData","initialize","_initialize","_callee","urlParams","authCode","_context","URLSearchParams","window","location","search","get","console","log","exchangeAuthCode","clearAuthCodeFromUrl","checkStoredToken","_exchangeAuthCode","_callee2","response","result","_t","_context2","fetch","concat","method","headers","body","JSON","stringify","json","ok","setAuthData","token","userId","email","phoneNumber","showNotification","warn","message","clearAuthData","error","_x","_checkStoredToken","_callee3","_t2","_context3","localStorage","getItem","setItem","document","cookie","updateUI","removeItem","_logout","_callee4","identityServerUrl","_context4","protocol","hostname","href","logout","getAuthToken","getAuthHeaders","_this","authElements","querySelectorAll","guestElements","forEach","element","style","display","userEmailElements","textContent","loginButtons","logoutButtons","btn","onclick","authEvent","CustomEvent","detail","dispatchEvent","url","URL","searchParams","history","replaceState","type","undefined","notification","createElement","className","cssText","appendChild","setTimeout","remove","authManager","getCurrentUser","Modal","OpenModal","CloseModal","CloseModalOnOutsideClick","modalCall","addEventListener","querySelector","classList","add","crossModal","cross","closest","modalOverview","event","target","contains","ShowNotification","text","color","backgroundColor","parentNode","removeChild","UserValidator","UserProfile","userApiAddress","validator","_GetUserById","data","_t3","Error","GetUserById","_GetCarsByUserId","_t4","_t5","_t6","GetCarsByUserId","_x2","_InsertUserDataToCardOnMainPage","userIdLinks","_t7","link","user","fullName","phone","carsCount","firstName","lastName","patronymic","cars","car","mark","model","number","InsertUserDataToCardOnMainPage","_x3","_InsertCarsToUserProfile","carsContainer","innerHTML","SetUserCar","InsertCarsToUserProfile","_x4","_InsertUserDataToProfile","_callee5","_t8","_context5","setValue","id","getElementById","date","Date","year","getFullYear","month","getMonth","padStart","day","getDate","birthday","InsertUserDataToProfile","_x5","SetCarTemplate","buttonDelCar","disabledOrNot","keys","carTemplate","carsList","insertAdjacentHTML","CollectUserDataFromProfile","userProfileInputs","input","inputKey","inputValue","setHours","toISOString","CollectCarsDataFromProfile","carsData","_car$querySelector","_car$querySelector2","_car$querySelector3","_car$querySelector4","carData","dataset","carId","push","CollectCarsDataFromModal","_car$querySelector5","_car$querySelector6","_car$querySelector7","_car$querySelector8","ShowValidationErrors","errors","field","errorElement","carErrors","index","_UpdateUserToDB","_callee6","validation","carsValidation","allErrors","_t9","_t0","_t1","_context6","validateUserData","ValidateCarsData","isValid","_objectSpread","UpdateUserToDB","_x6","_x7","_this2","carValidation","validateCar","duplicateIndices","validateUniqueCarNumbers","ValidateCarInModal","_AddCarToUser","_callee7","_t10","_t11","_t12","_context7","AddCarToUser","_x8","_RemoveCarFromUser","_callee8","_t13","_t14","_t15","_context8","RemoveCarFromUser","_x9","_event$detail","userProfile","pathname","action","allowedLetters","validRegionCodes","forbiddenCombinations","validateName","name","fieldName","required","trim","test","validateBirthday","birthDate","today","minDate","isNaN","getTime","validatePhoneNumber","cleanPhone","replace","phonePatterns","isValidFormat","_i","_phonePatterns","pattern","validateEmail","emailRegex","localPart","split","startsWith","endsWith","includes","validateCarNumber","cleanNumber","toUpperCase","patterns","_i2","_patterns","regionCode","slice","twoDigitCode","threeDigitCode","_iterator","_createForOfIteratorHelper","_step","s","forbidden","err","validateCarBrand","validateCarColor","markValidation","modelValidation","colorValidation","numberValidation","numbers","map","_car$number","filter","Boolean","duplicates","seen","Set","has","firstIndex","indexOf","firstNameValidation","lastNameValidation","patronymicValidation","birthdayValidation","phoneValidation","emailValidation","formatCarNumber","letterMap","char","join","formatPhoneNumber","formatted"],"sourceRoot":""}